{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Ni2/Documents/M1_git/web/Angular_Front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Major } from 'src/models/enum';\nexport let TicketFormComponent = class TicketFormComponent {\n  formBuilder;\n  ticketService;\n  studentService;\n  ticketForm;\n  FILIERE_LIST = Object.values(Major);\n  STUDENTS_LIST = [];\n  constructor(formBuilder, ticketService, studentService) {\n    // Form creation\n    this.formBuilder = formBuilder;\n    this.ticketService = ticketService;\n    this.studentService = studentService;\n    this.ticketForm = this.formBuilder.group({\n      title: [''],\n      description: [''],\n      major: [''],\n      studentID: ['']\n    });\n  }\n  ngOnInit() {\n    this.httpGetCall(this.studentService);\n    this.studentService.students$.subscribe(elem => {\n      console.log(elem);\n      elem.forEach(student => {\n        this.STUDENTS_LIST.push(student);\n      });\n    });\n  }\n  httpGetCall(studentService) {\n    return _asyncToGenerator(function* () {\n      try {\n        yield studentService.getApiAndClearStudent();\n      } catch (error) {\n        console.error(\"Erreur\");\n      }\n    })();\n  }\n  addTicket() {\n    const ticketToCreate = this.ticketForm.getRawValue();\n    ticketToCreate.date = new Date();\n    const studentID = this.ticketForm.get(\"studentID\").value;\n    ticketToCreate.student = this.STUDENTS_LIST.find(student => student.id == studentID);\n    this.ticketService.addTicket(ticketToCreate);\n  }\n};\nTicketFormComponent = __decorate([Component({\n  selector: 'app-ticket-form',\n  templateUrl: './ticket-form.component.html',\n  styleUrls: ['./ticket-form.component.scss']\n})], TicketFormComponent);","map":{"version":3,"names":["Component","Major","TicketFormComponent","formBuilder","ticketService","studentService","ticketForm","FILIERE_LIST","Object","values","STUDENTS_LIST","constructor","group","title","description","major","studentID","ngOnInit","httpGetCall","students$","subscribe","elem","console","log","forEach","student","push","_asyncToGenerator","getApiAndClearStudent","error","addTicket","ticketToCreate","getRawValue","date","Date","get","value","find","id","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Ni2\\Documents\\M1_git\\web\\Angular_Front\\src\\app\\tickets\\ticket-form\\ticket-form.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { TicketService } from '../../../services/ticket/ticket.service';\r\nimport { StudentService } from '../../../services/student/student.service';\r\n\r\nimport { Ticket } from '../../../models/ticket';\r\nimport { Major } from 'src/models/enum';\r\nimport { Student } from 'src/models/student';\r\n\r\n@Component({\r\n  selector: 'app-ticket-form',\r\n  templateUrl: './ticket-form.component.html',\r\n  styleUrls: ['./ticket-form.component.scss']\r\n})\r\nexport class TicketFormComponent implements OnInit {\r\n\r\n  public ticketForm: FormGroup;\r\n  public FILIERE_LIST: string[] = Object.values(Major);\r\n  public STUDENTS_LIST: Array<any> = [];\r\n\r\n  constructor(public formBuilder: FormBuilder, public ticketService: TicketService, public studentService: StudentService) {\r\n    // Form creation\r\n    \r\n    this.ticketForm = this.formBuilder.group({\r\n      title: [''],\r\n      description: [''],\r\n      major: [''],\r\n      studentID: ['']\r\n    }); \r\n    \r\n  }\r\n\r\n  ngOnInit() {    \r\n    this.httpGetCall(this.studentService);\r\n\r\n    this.studentService.students$.subscribe((elem) => {\r\n      console.log(elem)\r\n      elem.forEach(student => {\r\n        this.STUDENTS_LIST.push(student);\r\n      });\r\n    })\r\n  }\r\n\r\n  async httpGetCall(studentService: StudentService) {\r\n    try {\r\n      await studentService.getApiAndClearStudent();\r\n    } catch (error) {\r\n      console.error(\"Erreur\");\r\n    }\r\n  }\r\n\r\n  addTicket() {\r\n    const ticketToCreate: Ticket = this.ticketForm.getRawValue() as Ticket;\r\n    ticketToCreate.date = new Date();\r\n    const studentID = this.ticketForm.get(\"studentID\")!.value;\r\n    ticketToCreate.student = this.STUDENTS_LIST.find(student => student.id == studentID);\r\n    this.ticketService.addTicket(ticketToCreate);\r\n  }\r\n\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAS,QAAgB,eAAe;AAMjD,SAASC,KAAK,QAAQ,iBAAiB;AAQhC,WAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAMXC,WAAA;EAAiCC,aAAA;EAAqCC,cAAA;EAJlFC,UAAU;EACVC,YAAY,GAAaC,MAAM,CAACC,MAAM,CAACR,KAAK,CAAC;EAC7CS,aAAa,GAAe,EAAE;EAErCC,YAAmBR,WAAwB,EAASC,aAA4B,EAASC,cAA8B;IACrH;IADiB,KAAAF,WAAW,GAAXA,WAAW;IAAsB,KAAAC,aAAa,GAAbA,aAAa;IAAwB,KAAAC,cAAc,GAAdA,cAAc;IAGrG,IAAI,CAACC,UAAU,GAAG,IAAI,CAACH,WAAW,CAACS,KAAK,CAAC;MACvCC,KAAK,EAAE,CAAC,EAAE,CAAC;MACXC,WAAW,EAAE,CAAC,EAAE,CAAC;MACjBC,KAAK,EAAE,CAAC,EAAE,CAAC;MACXC,SAAS,EAAE,CAAC,EAAE;KACf,CAAC;EAEJ;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACC,WAAW,CAAC,IAAI,CAACb,cAAc,CAAC;IAErC,IAAI,CAACA,cAAc,CAACc,SAAS,CAACC,SAAS,CAAEC,IAAI,IAAI;MAC/CC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjBA,IAAI,CAACG,OAAO,CAACC,OAAO,IAAG;QACrB,IAAI,CAACf,aAAa,CAACgB,IAAI,CAACD,OAAO,CAAC;MAClC,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEMP,WAAWA,CAACb,cAA8B;IAAA,OAAAsB,iBAAA;MAC9C,IAAI;QACF,MAAMtB,cAAc,CAACuB,qBAAqB,EAAE;OAC7C,CAAC,OAAOC,KAAK,EAAE;QACdP,OAAO,CAACO,KAAK,CAAC,QAAQ,CAAC;;IACxB;EACH;EAEAC,SAASA,CAAA;IACP,MAAMC,cAAc,GAAW,IAAI,CAACzB,UAAU,CAAC0B,WAAW,EAAY;IACtED,cAAc,CAACE,IAAI,GAAG,IAAIC,IAAI,EAAE;IAChC,MAAMlB,SAAS,GAAG,IAAI,CAACV,UAAU,CAAC6B,GAAG,CAAC,WAAW,CAAE,CAACC,KAAK;IACzDL,cAAc,CAACN,OAAO,GAAG,IAAI,CAACf,aAAa,CAAC2B,IAAI,CAACZ,OAAO,IAAIA,OAAO,CAACa,EAAE,IAAItB,SAAS,CAAC;IACpF,IAAI,CAACZ,aAAa,CAAC0B,SAAS,CAACC,cAAc,CAAC;EAC9C;CAED;AA7CY7B,mBAAmB,GAAAqC,UAAA,EAL/BvC,SAAS,CAAC;EACTwC,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,C,EACWxC,mBAAmB,CA6C/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}