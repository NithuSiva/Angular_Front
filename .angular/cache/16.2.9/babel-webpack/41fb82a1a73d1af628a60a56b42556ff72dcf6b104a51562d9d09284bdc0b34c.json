{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/services/student/student.service\";\nexport let UserFormComponent = /*#__PURE__*/(() => {\n  class UserFormComponent {\n    formBuilder;\n    studentService;\n    studentForm;\n    constructor(formBuilder, studentService) {\n      this.formBuilder = formBuilder;\n      this.studentService = studentService;\n      this.studentForm = this.formBuilder.group({\n        id: [''],\n        firstName: [''],\n        lastName: ['']\n      });\n      console.log('Composant user-form créé');\n    }\n    // addStudent() {\n    //   let id = this.studentService.getLastId() + 1; \n    //   const studentToCreate: Student = this.studentForm.getRawValue() as Student;\n    //   studentToCreate['id'] = id;\n    //   let tr = document.getElementsByClassName(\"tr\");\n    //   let trArray = Array.from(tr);\n    //   if(trArray)\n    //     trArray.forEach(function(element) {\n    //       element.remove();\n    //     });\n    //   this.studentService.addStudent(studentToCreate);\n    //   console.log(\"studentHasBeenAdded emit : \", studentToCreate);\n    //   console.log(this.studentService.students$)\n    // }\n    httpPostStudent() {\n      const studentToCreate = this.studentForm.getRawValue();\n      this.studentService.httpPostStudent(studentToCreate);\n    }\n    static ɵfac = function UserFormComponent_Factory(t) {\n      return new (t || UserFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.StudentService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: UserFormComponent,\n      selectors: [[\"app-user-form\"]],\n      decls: 20,\n      vars: 4,\n      consts: [[1, \"\", 3, \"formGroup\"], [\"for\", \"firstName\"], [\"type\", \"text\", \"id\", \"firstName\", 1, \"\", 3, \"formControlName\"], [\"for\", \"lastName\"], [\"type\", \"text\", \"id\", \"lastName\", 1, \"\", 3, \"formControlName\"], [\"for\", \"id\"], [\"type\", \"number\", \"id\", \"id\", 1, \"\", 3, \"formControlName\"], [\"type\", \"submit\", 1, \"btn-custom\", 3, \"click\"]],\n      template: function UserFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h3\");\n          i0.ɵɵtext(1, \"Create a new student\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"form\", 0)(3, \"label\", 1);\n          i0.ɵɵtext(4, \" First Name \");\n          i0.ɵɵelement(5, \"br\")(6, \"input\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"br\");\n          i0.ɵɵelementStart(8, \"label\", 3);\n          i0.ɵɵtext(9, \" Last Name\");\n          i0.ɵɵelement(10, \"br\")(11, \"input\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(12, \"br\");\n          i0.ɵɵelementStart(13, \"label\", 5);\n          i0.ɵɵtext(14, \" Id \");\n          i0.ɵɵelement(15, \"br\")(16, \"input\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(17, \"br\");\n          i0.ɵɵelementStart(18, \"button\", 7);\n          i0.ɵɵlistener(\"click\", function UserFormComponent_Template_button_click_18_listener() {\n            return ctx.httpPostStudent();\n          });\n          i0.ɵɵtext(19, \"Create\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"formGroup\", ctx.studentForm);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"formControlName\", \"firstName\");\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"formControlName\", \"lastName\");\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"formControlName\", \"id\");\n        }\n      },\n      dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\"body[_ngcontent-%COMP%], html[_ngcontent-%COMP%] {\\n    margin: 0;\\n    height: 100%;\\n}\\n\\nh3[_ngcontent-%COMP%] {\\n    width: 100%;\\n    text-align: center;\\n}\\n\\nform[_ngcontent-%COMP%] {\\n    width: 70%;\\n    margin: 0 auto;\\n    text-align: center;\\n}\\n\\nbutton[_ngcontent-%COMP%] {margin-bottom: 50px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdXNlcnMvdXNlci1mb3JtL3VzZXItZm9ybS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksU0FBUztJQUNULFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksVUFBVTtJQUNWLGNBQWM7SUFDZCxrQkFBa0I7QUFDdEI7O0FBRUEsUUFBUSxtQkFBbUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImJvZHksIGh0bWwge1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcblxyXG5oMyB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuZm9ybSB7XHJcbiAgICB3aWR0aDogNzAlO1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbmJ1dHRvbiB7bWFyZ2luLWJvdHRvbTogNTBweDt9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n  return UserFormComponent;\n})();","map":{"version":3,"names":["UserFormComponent","formBuilder","studentService","studentForm","constructor","group","id","firstName","lastName","console","log","httpPostStudent","studentToCreate","getRawValue","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","StudentService","selectors","decls","vars","consts","template","UserFormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","UserFormComponent_Template_button_click_18_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Ni2\\Documents\\Angular_Front\\src\\app\\users\\user-form\\user-form.component.ts","C:\\Users\\Ni2\\Documents\\Angular_Front\\src\\app\\users\\user-form\\user-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { StudentService } from 'src/services/student/student.service';\nimport { Student } from 'src/models/student';\n\n\n@Component({\n  selector: 'app-user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.css']\n})\n\nexport class UserFormComponent {\n\n\n  public studentForm: FormGroup;\n\n  constructor(public formBuilder: FormBuilder, public studentService: StudentService) {\n    this.studentForm = this.formBuilder.group({\n      id: [''],\n      firstName: [''],\n      lastName: ['']\n    }); \n    console.log('Composant user-form créé');\n\n  }\n\n  // addStudent() {\n  //   let id = this.studentService.getLastId() + 1; \n  //   const studentToCreate: Student = this.studentForm.getRawValue() as Student;\n  //   studentToCreate['id'] = id;\n\n  //   let tr = document.getElementsByClassName(\"tr\");\n  //   let trArray = Array.from(tr);\n  //   if(trArray)\n  //     trArray.forEach(function(element) {\n  //       element.remove();\n  //     });\n\n  //   this.studentService.addStudent(studentToCreate);\n   \n  //   console.log(\"studentHasBeenAdded emit : \", studentToCreate);\n    \n  //   console.log(this.studentService.students$)\n\n  // }\n\n  httpPostStudent() {\n    \n    const studentToCreate: Student = this.studentForm.getRawValue() as Student;\n    this.studentService.httpPostStudent(studentToCreate);\n    \n  }\n}\n","<h3>Create a new student</h3>\n<form class=\"\" [formGroup]=\"studentForm\">\n  <label for=\"firstName\">\n    First Name <br>\n    <input class=\"\" type=\"text\" id=\"firstName\" [formControlName]=\"'firstName'\">\n  </label>\n  <br>\n  <label for=\"lastName\">\n    Last Name<br>\n    <input class=\"\" type=\"text\" id=\"lastName\" [formControlName]=\"'lastName'\">\n  </label>\n  <br>\n  <label for=\"id\">\n    Id <br>\n    <input class=\"\" type=\"number\" id=\"id\" [formControlName]=\"'id'\">\n  </label>\n  <br>\n  <button type=\"submit\" class=\"btn-custom\" (click)=\"httpPostStudent()\">Create</button>\n</form>"],"mappings":";;;AAYA,WAAaA,iBAAiB;EAAxB,MAAOA,iBAAiB;IAKTC,WAAA;IAAiCC,cAAA;IAF7CC,WAAW;IAElBC,YAAmBH,WAAwB,EAASC,cAA8B;MAA/D,KAAAD,WAAW,GAAXA,WAAW;MAAsB,KAAAC,cAAc,GAAdA,cAAc;MAChE,IAAI,CAACC,WAAW,GAAG,IAAI,CAACF,WAAW,CAACI,KAAK,CAAC;QACxCC,EAAE,EAAE,CAAC,EAAE,CAAC;QACRC,SAAS,EAAE,CAAC,EAAE,CAAC;QACfC,QAAQ,EAAE,CAAC,EAAE;OACd,CAAC;MACFC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IAEzC;IAEA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IAEA;IAEA;IAEA;IAEA;IAEAC,eAAeA,CAAA;MAEb,MAAMC,eAAe,GAAY,IAAI,CAACT,WAAW,CAACU,WAAW,EAAa;MAC1E,IAAI,CAACX,cAAc,CAACS,eAAe,CAACC,eAAe,CAAC;IAEtD;;uBAxCWZ,iBAAiB,EAAAc,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,cAAA;IAAA;;YAAjBnB,iBAAiB;MAAAoB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCZ9BZ,EAAA,CAAAc,cAAA,SAAI;UAAAd,EAAA,CAAAe,MAAA,2BAAoB;UAAAf,EAAA,CAAAgB,YAAA,EAAK;UAC7BhB,EAAA,CAAAc,cAAA,cAAyC;UAErCd,EAAA,CAAAe,MAAA,mBAAW;UAAAf,EAAA,CAAAiB,SAAA,SAAI;UAEjBjB,EAAA,CAAAgB,YAAA,EAAQ;UACRhB,EAAA,CAAAiB,SAAA,SAAI;UACJjB,EAAA,CAAAc,cAAA,eAAsB;UACpBd,EAAA,CAAAe,MAAA,iBAAS;UAAAf,EAAA,CAAAiB,SAAA,UAAI;UAEfjB,EAAA,CAAAgB,YAAA,EAAQ;UACRhB,EAAA,CAAAiB,SAAA,UAAI;UACJjB,EAAA,CAAAc,cAAA,gBAAgB;UACdd,EAAA,CAAAe,MAAA,YAAG;UAAAf,EAAA,CAAAiB,SAAA,UAAI;UAETjB,EAAA,CAAAgB,YAAA,EAAQ;UACRhB,EAAA,CAAAiB,SAAA,UAAI;UACJjB,EAAA,CAAAc,cAAA,iBAAqE;UAA5Bd,EAAA,CAAAkB,UAAA,mBAAAC,oDAAA;YAAA,OAASN,GAAA,CAAAhB,eAAA,EAAiB;UAAA,EAAC;UAACG,EAAA,CAAAe,MAAA,cAAM;UAAAf,EAAA,CAAAgB,YAAA,EAAS;;;UAhBvEhB,EAAA,CAAAoB,SAAA,GAAyB;UAAzBpB,EAAA,CAAAqB,UAAA,cAAAR,GAAA,CAAAxB,WAAA,CAAyB;UAGOW,EAAA,CAAAoB,SAAA,GAA+B;UAA/BpB,EAAA,CAAAqB,UAAA,gCAA+B;UAKhCrB,EAAA,CAAAoB,SAAA,GAA8B;UAA9BpB,EAAA,CAAAqB,UAAA,+BAA8B;UAKlCrB,EAAA,CAAAoB,SAAA,GAAwB;UAAxBpB,EAAA,CAAAqB,UAAA,yBAAwB;;;;;;;SDFrDnC,iBAAiB;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}