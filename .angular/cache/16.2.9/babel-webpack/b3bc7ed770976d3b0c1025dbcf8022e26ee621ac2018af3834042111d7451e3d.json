{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Major } from '../../../models/enum';\nexport let TicketComponent = class TicketComponent {\n  /**\n   * Inputs & Output allow communication between parent & child components.\n   * More information: https://angular.io/guide/component-interaction\n   */\n  ticket;\n  ticketHasBeenSelected = new EventEmitter();\n  ticketHasBeenArchived = new EventEmitter();\n  constructor() {}\n  ngOnInit() {}\n  get major() {\n    return Major;\n  }\n  selectTicket() {\n    this.ticketHasBeenSelected.emit(true);\n  }\n  archivedTicket(ticket, event) {\n    this.ticketHasBeenArchived.emit(ticket);\n    // let element = event.srcElement;\n    // let el = document.getElementById(element.id)?.parentElement;\n    // el?.classList.add('ticket-archived');\n  }\n};\n\n__decorate([Input()], TicketComponent.prototype, \"ticket\", void 0);\n__decorate([Output()], TicketComponent.prototype, \"ticketHasBeenSelected\", void 0);\n__decorate([Output()], TicketComponent.prototype, \"ticketHasBeenArchived\", void 0);\nTicketComponent = __decorate([Component({\n  selector: 'app-ticket',\n  templateUrl: './ticket.component.html',\n  styleUrls: ['./ticket.component.scss']\n})], TicketComponent);","map":{"version":3,"names":["Component","EventEmitter","Input","Output","Major","TicketComponent","ticket","ticketHasBeenSelected","ticketHasBeenArchived","constructor","ngOnInit","major","selectTicket","emit","archivedTicket","event","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Ni2\\Documents\\Angular_Front\\src\\app\\tickets\\ticket\\ticket.component.ts"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Ticket } from '../../../models/ticket';\r\nimport { Major } from '../../../models/enum';\r\n\r\n@Component({\r\n  selector: 'app-ticket',\r\n  templateUrl: './ticket.component.html',\r\n  styleUrls: ['./ticket.component.scss']\r\n})\r\nexport class TicketComponent implements OnInit {\r\n\r\n  /**\r\n   * Inputs & Output allow communication between parent & child components.\r\n   * More information: https://angular.io/guide/component-interaction\r\n   */\r\n  @Input()\r\n  ticket!: Ticket;\r\n  \r\n  @Output()\r\n  ticketHasBeenSelected: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  @Output()\r\n  ticketHasBeenArchived: EventEmitter<Ticket> = new EventEmitter<Ticket>();\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n  \r\n  public get major(): typeof Major {\r\n    return Major;\r\n  }\r\n\r\n  selectTicket() {\r\n    this.ticketHasBeenSelected.emit(true);\r\n  }\r\n\r\n  archivedTicket(ticket: Ticket, event: any) {\r\n    this.ticketHasBeenArchived.emit(ticket);\r\n    // let element = event.srcElement;\r\n    // let el = document.getElementById(element.id)?.parentElement;\r\n    // el?.classList.add('ticket-archived');\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,YAAY,EAAEC,KAAK,EAAUC,MAAM,QAAQ,eAAe;AAE9E,SAASC,KAAK,QAAQ,sBAAsB;AAOrC,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAE1B;;;;EAKAC,MAAM;EAGNC,qBAAqB,GAA0B,IAAIN,YAAY,EAAW;EAG1EO,qBAAqB,GAAyB,IAAIP,YAAY,EAAU;EAExEQ,YAAA,GACA;EAEAC,QAAQA,CAAA,GACR;EAEA,IAAWC,KAAKA,CAAA;IACd,OAAOP,KAAK;EACd;EAEAQ,YAAYA,CAAA;IACV,IAAI,CAACL,qBAAqB,CAACM,IAAI,CAAC,IAAI,CAAC;EACvC;EAEAC,cAAcA,CAACR,MAAc,EAAES,KAAU;IACvC,IAAI,CAACP,qBAAqB,CAACK,IAAI,CAACP,MAAM,CAAC;IACvC;IACA;IACA;EACF;CACD;;AA5BCU,UAAA,EADCd,KAAK,EAAE,C,8CACQ;AAGhBc,UAAA,EADCb,MAAM,EAAE,C,6DACkE;AAG3Ea,UAAA,EADCb,MAAM,EAAE,C,6DACgE;AAb9DE,eAAe,GAAAW,UAAA,EAL3BhB,SAAS,CAAC;EACTiB,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,C,EACWd,eAAe,CAmC3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}