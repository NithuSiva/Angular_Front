{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { STUDENTS_MOCKED } from 'src/mocks/student.mock';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let StudentService = /*#__PURE__*/(() => {\n  class StudentService {\n    http;\n    studentList = STUDENTS_MOCKED;\n    students$ = new BehaviorSubject(this.studentList);\n    url;\n    constructor(http) {\n      this.http = http;\n    }\n    getStudent() {\n      console.log(\"TESTSET\");\n      this.http.get(this.url).subscribe(data => console.log(data));\n    }\n    static ɵfac = function StudentService_Factory(t) {\n      return new (t || StudentService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: StudentService,\n      factory: StudentService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return StudentService;\n})();","map":{"version":3,"names":["BehaviorSubject","STUDENTS_MOCKED","StudentService","http","studentList","students$","url","constructor","getStudent","console","log","get","subscribe","data","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Ni2\\Documents\\M1_git\\web\\Angular_Front\\src\\services\\student\\student.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { STUDENTS_MOCKED } from 'src/mocks/student.mock';\r\nimport { Student } from 'src/models/student';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class StudentService {\r\n\r\n    private studentList: Student[] = STUDENTS_MOCKED;\r\n    public students$: BehaviorSubject<Student[]> = new BehaviorSubject(this.studentList);\r\n    public url!: \"https://jsonplaceholder.typicode.com/users\";\r\n   \r\n    constructor(private http: HttpClient) {\r\n        \r\n    }\r\n\r\n    public getStudent() {\r\n        console.log(\"TESTSET\")\r\n        this.http.get<any>(this.url).subscribe(data =>\r\n            console.log(data));\r\n    }\r\n\r\n} "],"mappings":"AAEA,SAASA,eAAe,QAAQ,MAAM;AACtC,SAASC,eAAe,QAAQ,wBAAwB;;;AAOxD,WAAaC,cAAc;EAArB,MAAOA,cAAc;IAMHC,IAAA;IAJZC,WAAW,GAAcH,eAAe;IACzCI,SAAS,GAA+B,IAAIL,eAAe,CAAC,IAAI,CAACI,WAAW,CAAC;IAC7EE,GAAG;IAEVC,YAAoBJ,IAAgB;MAAhB,KAAAA,IAAI,GAAJA,IAAI;IAExB;IAEOK,UAAUA,CAAA;MACbC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;MACtB,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAM,IAAI,CAACL,GAAG,CAAC,CAACM,SAAS,CAACC,IAAI,IACvCJ,OAAO,CAACC,GAAG,CAACG,IAAI,CAAC,CAAC;IAC1B;;uBAdSX,cAAc,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;;aAAdf,cAAc;MAAAgB,OAAA,EAAdhB,cAAc,CAAAiB,IAAA;MAAAC,UAAA,EAHX;IAAM;;SAGTlB,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}