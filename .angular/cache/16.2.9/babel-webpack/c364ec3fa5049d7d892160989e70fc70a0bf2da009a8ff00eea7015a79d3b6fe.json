{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Ni2/Documents/Angular_Front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { EventEmitter } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let StudentService = /*#__PURE__*/(() => {\n  class StudentService {\n    _httpClient;\n    studentList = [];\n    students$ = new BehaviorSubject([]);\n    studentHasBeenAdded = new EventEmitter();\n    url = \"https://jsonplaceholder.typicode.com/users\";\n    studentListApi;\n    constructor(_httpClient) {\n      this._httpClient = _httpClient;\n    }\n    getBackEndStudentList() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        let urlBackEnd = \"http://localhost:3000/api/students\";\n        try {\n          yield _this._httpClient.get(urlBackEnd).subscribe(data => {\n            _this.studentListApi = data;\n            _this.studentListApi.forEach(element => {\n              //     let temp = element['name'].split(' ');\n              let newStudent = {\n                'id': element['studentId'],\n                'firstName': element['FirstName'],\n                'lastName': element['LastName']\n              };\n              _this.studentList.push(newStudent);\n            });\n            _this.students$.next(_this.studentList);\n          });\n        } catch (error) {\n          console.error(\"Erreur HTTP GET\");\n          throw error;\n        }\n      })();\n    }\n    getLastId() {\n      return this.studentList.length;\n    }\n    getStudentsSubject() {\n      return this.students$;\n    }\n    getStudentId(id) {\n      console.log(this.studentList[0]);\n      this.students$.value.forEach(element => {\n        console.log(\"getStudentId :\", element);\n      });\n    }\n    addStudent(student) {\n      // this.students$.value.push(student);\n      this.studentList.push(student);\n      this.students$.next(this.studentList);\n    }\n    getApiAndClearStudent() {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        try {\n          yield _this2._httpClient.get(_this2.url).subscribe(data => {\n            _this2.studentListApi = data;\n            _this2.studentListApi.forEach(element => {\n              let temp = element['name'].split(' ');\n              let newStudent = {\n                'id': element['id'],\n                'firstName': temp[0],\n                'lastName': temp[1]\n              };\n              _this2.studentList.push(newStudent);\n            });\n            _this2.students$.next(_this2.studentList);\n          });\n        } catch (error) {\n          console.error(\"Erreur HTTP GET\");\n          throw error;\n        }\n      })();\n    }\n    static ɵfac = function StudentService_Factory(t) {\n      return new (t || StudentService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: StudentService,\n      factory: StudentService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return StudentService;\n})();","map":{"version":3,"names":["EventEmitter","BehaviorSubject","StudentService","_httpClient","studentList","students$","studentHasBeenAdded","url","studentListApi","constructor","getBackEndStudentList","_this","_asyncToGenerator","urlBackEnd","get","subscribe","data","forEach","element","newStudent","push","next","error","console","getLastId","length","getStudentsSubject","getStudentId","id","log","value","addStudent","student","getApiAndClearStudent","_this2","temp","split","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Ni2\\Documents\\Angular_Front\\src\\services\\student\\student.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { EventEmitter, Injectable } from '@angular/core';\r\nimport { BehaviorSubject, last } from 'rxjs';\r\nimport { STUDENTS_MOCKED } from 'src/mocks/student.mock';\r\nimport { Student } from 'src/models/student';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class StudentService {\r\n\r\n    private studentList: Student[] = [];\r\n\r\n    public students$: BehaviorSubject<any[]> = new BehaviorSubject<any>([]);\r\n\r\n  \r\n    public studentHasBeenAdded: EventEmitter<Student> = new EventEmitter<Student>();\r\n\r\n    public url: string = \"https://jsonplaceholder.typicode.com/users\";\r\n\r\n    private studentListApi: any;\r\n\r\n    constructor(private _httpClient: HttpClient) {\r\n    }\r\n\r\n    async getBackEndStudentList(): Promise<void> {\r\n        let urlBackEnd = \"http://localhost:3000/api/students\";\r\n        try {\r\n            await this._httpClient.get(urlBackEnd)\r\n            .subscribe(data => {\r\n                this.studentListApi= (<any>data);\r\n                this.studentListApi.forEach((element: any) => {\r\n                    //     let temp = element['name'].split(' ');\r\n                    let newStudent: Student = {'id' :element['studentId'], 'firstName': element['FirstName'], 'lastName': element['LastName']};\r\n                    this.studentList.push(newStudent);\r\n\r\n                    \r\n                });\r\n                this.students$.next(this.studentList);\r\n            }\r\n            );\r\n        } catch (error) {\r\n            console.error(\"Erreur HTTP GET\");\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    getLastId(){\r\n        return this.studentList.length;\r\n    }\r\n\r\n    getStudentsSubject() {\r\n        return this.students$;\r\n    }\r\n    \r\n    getStudentId(id: String){\r\n        console.log(this.studentList[0]);\r\n        this.students$.value.forEach(element => {\r\n            console.log(\"getStudentId :\", element);\r\n        });\r\n    }\r\n\r\n    addStudent(student: Student) {\r\n        // this.students$.value.push(student);\r\n        this.studentList.push(student);\r\n        this.students$.next(this.studentList);\r\n      }\r\n\r\n    async getApiAndClearStudent(): Promise<void>{\r\n        try {\r\n            await this._httpClient.get(this.url)\r\n            .subscribe(data => {\r\n                this.studentListApi= (<any>data);\r\n                this.studentListApi.forEach((element: any) => {\r\n                    let temp = element['name'].split(' ');\r\n                    let newStudent: Student = {'id' :element['id'], 'firstName': temp[0], 'lastName': temp[1]};\r\n                    this.studentList.push(newStudent);\r\n\r\n                    \r\n                });\r\n                this.students$.next(this.studentList);\r\n            }\r\n            );\r\n        } catch (error) {\r\n            console.error(\"Erreur HTTP GET\");\r\n            throw error;\r\n        }\r\n    }\r\n} \r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}