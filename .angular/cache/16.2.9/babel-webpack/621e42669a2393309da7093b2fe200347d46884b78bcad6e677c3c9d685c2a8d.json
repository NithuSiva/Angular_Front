{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Ni2/Documents/Angular_Front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../student/student.service\";\nexport let TicketService = /*#__PURE__*/(() => {\n  class TicketService {\n    _httpClient;\n    studentService;\n    ticketList = [];\n    tickets$ = new BehaviorSubject(this.ticketList);\n    ticketListApi;\n    constructor(_httpClient, studentService) {\n      this._httpClient = _httpClient;\n      this.studentService = studentService;\n    }\n    getBackEndTicketList() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        let urlBackEnd = \"http://localhost:3000/api/tickets\";\n        try {\n          _this._httpClient.get(urlBackEnd).subscribe(data => {\n            _this.ticketListApi = data;\n            _this.ticketListApi.forEach(element => {\n              let studentCurrent;\n              element['student'].forEach(element2 => {\n                if (element2.studentId == element['id']) {\n                  studentCurrent: Student = {\n                    'id': element2['studentId'],\n                    'firstName': element2['FirstName'],\n                    'lastName': element2['LastName']\n                  };\n                  element2;\n                }\n              });\n              let newStudent = {\n                'title': element['title'],\n                'description': element['description'],\n                'date': element['date'],\n                'student': studentCurrent,\n                'major': element['major'],\n                'archived': element['archived']\n              };\n              _this.ticketList.push(newStudent);\n            });\n            _this.tickets$.next(_this.ticketList);\n          });\n        } catch (error) {\n          console.error(\"Erreur HTTP GET\");\n          throw error;\n        }\n      })();\n    }\n    addTicket(ticket) {\n      // You need here to update the list of ticket and then update our observable (Subject) with the new list\n      // More info: https://angular.io/tutorial/toh-pt6#the-searchterms-rxjs-subject\n      this.tickets$.value.push(ticket);\n      console.log(\"Ajout dans la liste: \", this.tickets$.value);\n      this.tickets$.next(this.ticketList);\n    }\n    archivedTicket(ticket) {\n      ticket.archived = true;\n      this.tickets$.next(this.ticketList);\n    }\n    deletedTicket(ticket) {\n      // this.tickets$.value.filter(tick => tick != ticket);\n      this.tickets$.value.splice(this.tickets$.value.indexOf(ticket), 1);\n      console.log(\"Suppresion dans la liste: \", this.tickets$.value);\n      this.tickets$.next(this.ticketList);\n    }\n    static ɵfac = function TicketService_Factory(t) {\n      return new (t || TicketService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.StudentService));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TicketService,\n      factory: TicketService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return TicketService;\n})();","map":{"version":3,"names":["BehaviorSubject","TicketService","_httpClient","studentService","ticketList","tickets$","ticketListApi","constructor","getBackEndTicketList","_this","_asyncToGenerator","urlBackEnd","get","subscribe","data","forEach","element","studentCurrent","element2","studentId","Student","newStudent","push","next","error","console","addTicket","ticket","value","log","archivedTicket","archived","deletedTicket","splice","indexOf","i0","ɵɵinject","i1","HttpClient","i2","StudentService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Ni2\\Documents\\Angular_Front\\src\\services\\ticket\\ticket.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Ticket } from '../../models/ticket';\r\nimport { StudentService } from '../student/student.service';\r\nimport { Student } from 'src/models/student';\r\n\r\nimport { TICKETS_MOCKED } from '../../mocks/tickets.mock';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TicketService {\r\n\r\n  private ticketList: Ticket[] = [];\r\n\r\n  public tickets$: BehaviorSubject<Ticket[]> = new BehaviorSubject(this.ticketList);\r\n\r\n  private ticketListApi: any;\r\n\r\n\r\n  constructor(private _httpClient: HttpClient, public studentService: StudentService) {\r\n  }\r\n\r\n  async getBackEndTicketList(): Promise<void> {\r\n    let urlBackEnd = \"http://localhost:3000/api/tickets\";\r\n    try {\r\n        this._httpClient.get(urlBackEnd)\r\n        .subscribe(data => {\r\n          this.ticketListApi = (<any>data);\r\n          this.ticketListApi.forEach((element: any) => {\r\n            let studentCurrent;\r\n            element['student'].forEach((element2: any) => {\r\n              if (element2.studentId == element['id']) {\r\n                studentCurrent: Student = {'id' :element2['studentId'], 'firstName': element2['FirstName'], 'lastName': element2['LastName']};element2;\r\n              }\r\n            });\r\n            let newStudent: Ticket = {\r\n              'title': element['title'],\r\n              'description': element['description'],\r\n              'date': element['date'],\r\n              'student': studentCurrent,\r\n              'major': element['major'],\r\n              'archived': element['archived']\r\n            };\r\n            this.ticketList.push(newStudent);\r\n          });\r\n          this.tickets$.next(this.ticketList);\r\n        }\r\n        );\r\n    } catch (error) {\r\n        console.error(\"Erreur HTTP GET\");\r\n        throw error;\r\n    }\r\n}\r\n\r\n  addTicket(ticket: Ticket) {\r\n    // You need here to update the list of ticket and then update our observable (Subject) with the new list\r\n    // More info: https://angular.io/tutorial/toh-pt6#the-searchterms-rxjs-subject\r\n    this.tickets$.value.push(ticket);\r\n    console.log(\"Ajout dans la liste: \", this.tickets$.value);\r\n    this.tickets$.next(this.ticketList)\r\n  }\r\n\r\n  archivedTicket(ticket: Ticket) {\r\n    ticket.archived = true;\r\n    this.tickets$.next(this.ticketList);\r\n  }\r\n\r\n   deletedTicket(ticket: Ticket) {\r\n    // this.tickets$.value.filter(tick => tick != ticket);\r\n    this.tickets$.value.splice(this.tickets$.value.indexOf(ticket), 1);\r\n    console.log(\"Suppresion dans la liste: \", this.tickets$.value);\r\n    this.tickets$.next(this.ticketList)\r\n  } \r\n}\r\n"],"mappings":";AAMA,SAASA,eAAe,QAAQ,MAAM;;;;AAMtC,WAAaC,aAAa;EAApB,MAAOA,aAAa;IASJC,WAAA;IAAgCC,cAAA;IAP5CC,UAAU,GAAa,EAAE;IAE1BC,QAAQ,GAA8B,IAAIL,eAAe,CAAC,IAAI,CAACI,UAAU,CAAC;IAEzEE,aAAa;IAGrBC,YAAoBL,WAAuB,EAASC,cAA8B;MAA9D,KAAAD,WAAW,GAAXA,WAAW;MAAqB,KAAAC,cAAc,GAAdA,cAAc;IAClE;IAEMK,oBAAoBA,CAAA;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA;QACxB,IAAIC,UAAU,GAAG,mCAAmC;QACpD,IAAI;UACAF,KAAI,CAACP,WAAW,CAACU,GAAG,CAACD,UAAU,CAAC,CAC/BE,SAAS,CAACC,IAAI,IAAG;YAChBL,KAAI,CAACH,aAAa,GAASQ,IAAK;YAChCL,KAAI,CAACH,aAAa,CAACS,OAAO,CAAEC,OAAY,IAAI;cAC1C,IAAIC,cAAc;cAClBD,OAAO,CAAC,SAAS,CAAC,CAACD,OAAO,CAAEG,QAAa,IAAI;gBAC3C,IAAIA,QAAQ,CAACC,SAAS,IAAIH,OAAO,CAAC,IAAI,CAAC,EAAE;kBACvCC,cAAc,EAAEG,OAAO,GAAG;oBAAC,IAAI,EAAEF,QAAQ,CAAC,WAAW,CAAC;oBAAE,WAAW,EAAEA,QAAQ,CAAC,WAAW,CAAC;oBAAE,UAAU,EAAEA,QAAQ,CAAC,UAAU;kBAAC,CAAC;kBAACA,QAAQ;;cAE1I,CAAC,CAAC;cACF,IAAIG,UAAU,GAAW;gBACvB,OAAO,EAAEL,OAAO,CAAC,OAAO,CAAC;gBACzB,aAAa,EAAEA,OAAO,CAAC,aAAa,CAAC;gBACrC,MAAM,EAAEA,OAAO,CAAC,MAAM,CAAC;gBACvB,SAAS,EAAEC,cAAc;gBACzB,OAAO,EAAED,OAAO,CAAC,OAAO,CAAC;gBACzB,UAAU,EAAEA,OAAO,CAAC,UAAU;eAC/B;cACDP,KAAI,CAACL,UAAU,CAACkB,IAAI,CAACD,UAAU,CAAC;YAClC,CAAC,CAAC;YACFZ,KAAI,CAACJ,QAAQ,CAACkB,IAAI,CAACd,KAAI,CAACL,UAAU,CAAC;UACrC,CAAC,CACA;SACJ,CAAC,OAAOoB,KAAK,EAAE;UACZC,OAAO,CAACD,KAAK,CAAC,iBAAiB,CAAC;UAChC,MAAMA,KAAK;;MACd;IACL;IAEEE,SAASA,CAACC,MAAc;MACtB;MACA;MACA,IAAI,CAACtB,QAAQ,CAACuB,KAAK,CAACN,IAAI,CAACK,MAAM,CAAC;MAChCF,OAAO,CAACI,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAACxB,QAAQ,CAACuB,KAAK,CAAC;MACzD,IAAI,CAACvB,QAAQ,CAACkB,IAAI,CAAC,IAAI,CAACnB,UAAU,CAAC;IACrC;IAEA0B,cAAcA,CAACH,MAAc;MAC3BA,MAAM,CAACI,QAAQ,GAAG,IAAI;MACtB,IAAI,CAAC1B,QAAQ,CAACkB,IAAI,CAAC,IAAI,CAACnB,UAAU,CAAC;IACrC;IAEC4B,aAAaA,CAACL,MAAc;MAC3B;MACA,IAAI,CAACtB,QAAQ,CAACuB,KAAK,CAACK,MAAM,CAAC,IAAI,CAAC5B,QAAQ,CAACuB,KAAK,CAACM,OAAO,CAACP,MAAM,CAAC,EAAE,CAAC,CAAC;MAClEF,OAAO,CAACI,GAAG,CAAC,4BAA4B,EAAE,IAAI,CAACxB,QAAQ,CAACuB,KAAK,CAAC;MAC9D,IAAI,CAACvB,QAAQ,CAACkB,IAAI,CAAC,IAAI,CAACnB,UAAU,CAAC;IACrC;;uBA9DWH,aAAa,EAAAkC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,cAAA;IAAA;;aAAbvC,aAAa;MAAAwC,OAAA,EAAbxC,aAAa,CAAAyC,IAAA;MAAAC,UAAA,EAFZ;IAAM;;SAEP1C,aAAa;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}