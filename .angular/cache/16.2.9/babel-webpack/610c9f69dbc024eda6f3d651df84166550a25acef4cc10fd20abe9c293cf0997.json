{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Ni2/Documents/Angular_Front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { EventEmitter } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let StudentService = /*#__PURE__*/(() => {\n  class StudentService {\n    _httpClient;\n    studentList = [];\n    students$ = new BehaviorSubject([]);\n    studentHasBeenAdded = new EventEmitter();\n    url = \"https://jsonplaceholder.typicode.com/users\";\n    studentListApi;\n    constructor(_httpClient) {\n      this._httpClient = _httpClient;\n      this.getBackEnd();\n    }\n    getBackEnd() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        let urlBackEnd = \"http://localhost:3000/api/students\";\n        try {\n          yield _this._httpClient.get(urlBackEnd).subscribe(data => {\n            console.log(data);\n            _this.studentListApi = data;\n            _this.studentListApi.forEach(element => {\n              console.log(element);\n              //     let temp = element['name'].split(' ');\n              //     let newStudent: Student = {'id' :element['id'], 'firstName': temp[0], 'lastName': temp[1]};\n              //     this.studentList.push(newStudent);\n            });\n            // this.students$.next(this.studentList);\n          });\n        } catch (error) {\n          console.error(\"Erreur HTTP GET\");\n          throw error;\n        }\n      })();\n    }\n    getLastId() {\n      return this.studentList.length;\n    }\n    getStudentsSubject() {\n      return this.students$;\n    }\n    addStudent(student) {\n      // this.students$.value.push(student);\n      this.studentList.push(student);\n      this.students$.next(this.studentList);\n    }\n    getApiAndClearStudent() {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        try {\n          yield _this2._httpClient.get(_this2.url).subscribe(data => {\n            _this2.studentListApi = data;\n            _this2.studentListApi.forEach(element => {\n              let temp = element['name'].split(' ');\n              let newStudent = {\n                'id': element['id'],\n                'firstName': temp[0],\n                'lastName': temp[1]\n              };\n              _this2.studentList.push(newStudent);\n            });\n            _this2.students$.next(_this2.studentList);\n          });\n        } catch (error) {\n          console.error(\"Erreur HTTP GET\");\n          throw error;\n        }\n      })();\n    }\n    static ɵfac = function StudentService_Factory(t) {\n      return new (t || StudentService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: StudentService,\n      factory: StudentService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return StudentService;\n})();","map":{"version":3,"names":["EventEmitter","BehaviorSubject","StudentService","_httpClient","studentList","students$","studentHasBeenAdded","url","studentListApi","constructor","getBackEnd","_this","_asyncToGenerator","urlBackEnd","get","subscribe","data","console","log","forEach","element","error","getLastId","length","getStudentsSubject","addStudent","student","push","next","getApiAndClearStudent","_this2","temp","split","newStudent","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Ni2\\Documents\\Angular_Front\\src\\services\\student\\student.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { EventEmitter, Injectable } from '@angular/core';\r\nimport { BehaviorSubject, last } from 'rxjs';\r\nimport { STUDENTS_MOCKED } from 'src/mocks/student.mock';\r\nimport { Student } from 'src/models/student';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class StudentService {\r\n\r\n    private studentList: Student[] = [];\r\n\r\n    public students$: BehaviorSubject<any[]> = new BehaviorSubject<any>([]);\r\n\r\n  \r\n    public studentHasBeenAdded: EventEmitter<Student> = new EventEmitter<Student>();\r\n\r\n    public url: string = \"https://jsonplaceholder.typicode.com/users\";\r\n    private studentListApi: any;\r\n    constructor(private _httpClient: HttpClient) {\r\n        this.getBackEnd();\r\n    }\r\n\r\n    async getBackEnd(): Promise<void> {\r\n        let urlBackEnd = \"http://localhost:3000/api/students\";\r\n        try {\r\n            await this._httpClient.get(urlBackEnd)\r\n            .subscribe(data => {\r\n                console.log(data)\r\n                this.studentListApi= (<any>data);\r\n                this.studentListApi.forEach((element: any) => {\r\n                        console.log(element)\r\n                //     let temp = element['name'].split(' ');\r\n                //     let newStudent: Student = {'id' :element['id'], 'firstName': temp[0], 'lastName': temp[1]};\r\n                //     this.studentList.push(newStudent);\r\n\r\n                    \r\n                });\r\n                // this.students$.next(this.studentList);\r\n            }\r\n            );\r\n        } catch (error) {\r\n            console.error(\"Erreur HTTP GET\");\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    getLastId(){\r\n        return this.studentList.length;\r\n    }\r\n\r\n    getStudentsSubject() {\r\n        return this.students$;\r\n    }\r\n\r\n    addStudent(student: Student) {\r\n        // this.students$.value.push(student);\r\n        this.studentList.push(student);\r\n        this.students$.next(this.studentList);\r\n      }\r\n\r\n    async getApiAndClearStudent(): Promise<void>{\r\n        try {\r\n            await this._httpClient.get(this.url)\r\n            .subscribe(data => {\r\n                this.studentListApi= (<any>data);\r\n                this.studentListApi.forEach((element: any) => {\r\n                    let temp = element['name'].split(' ');\r\n                    let newStudent: Student = {'id' :element['id'], 'firstName': temp[0], 'lastName': temp[1]};\r\n                    this.studentList.push(newStudent);\r\n\r\n                    \r\n                });\r\n                this.students$.next(this.studentList);\r\n            }\r\n            );\r\n        } catch (error) {\r\n            console.error(\"Erreur HTTP GET\");\r\n            throw error;\r\n        }\r\n    }\r\n} \r\n"],"mappings":";AACA,SAASA,YAAY,QAAoB,eAAe;AACxD,SAASC,eAAe,QAAc,MAAM;;;AAQ5C,WAAaC,cAAc;EAArB,MAAOA,cAAc;IAWHC,WAAA;IATZC,WAAW,GAAc,EAAE;IAE5BC,SAAS,GAA2B,IAAIJ,eAAe,CAAM,EAAE,CAAC;IAGhEK,mBAAmB,GAA0B,IAAIN,YAAY,EAAW;IAExEO,GAAG,GAAW,4CAA4C;IACzDC,cAAc;IACtBC,YAAoBN,WAAuB;MAAvB,KAAAA,WAAW,GAAXA,WAAW;MAC3B,IAAI,CAACO,UAAU,EAAE;IACrB;IAEMA,UAAUA,CAAA;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA;QACZ,IAAIC,UAAU,GAAG,oCAAoC;QACrD,IAAI;UACA,MAAMF,KAAI,CAACR,WAAW,CAACW,GAAG,CAACD,UAAU,CAAC,CACrCE,SAAS,CAACC,IAAI,IAAG;YACdC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;YACjBL,KAAI,CAACH,cAAc,GAAQQ,IAAK;YAChCL,KAAI,CAACH,cAAc,CAACW,OAAO,CAAEC,OAAY,IAAI;cACrCH,OAAO,CAACC,GAAG,CAACE,OAAO,CAAC;cAC5B;cACA;cACA;YAGA,CAAC,CAAC;YACF;UACJ,CAAC,CACA;SACJ,CAAC,OAAOC,KAAK,EAAE;UACZJ,OAAO,CAACI,KAAK,CAAC,iBAAiB,CAAC;UAChC,MAAMA,KAAK;;MACd;IACL;IAEAC,SAASA,CAAA;MACL,OAAO,IAAI,CAAClB,WAAW,CAACmB,MAAM;IAClC;IAEAC,kBAAkBA,CAAA;MACd,OAAO,IAAI,CAACnB,SAAS;IACzB;IAEAoB,UAAUA,CAACC,OAAgB;MACvB;MACA,IAAI,CAACtB,WAAW,CAACuB,IAAI,CAACD,OAAO,CAAC;MAC9B,IAAI,CAACrB,SAAS,CAACuB,IAAI,CAAC,IAAI,CAACxB,WAAW,CAAC;IACvC;IAEIyB,qBAAqBA,CAAA;MAAA,IAAAC,MAAA;MAAA,OAAAlB,iBAAA;QACvB,IAAI;UACA,MAAMkB,MAAI,CAAC3B,WAAW,CAACW,GAAG,CAACgB,MAAI,CAACvB,GAAG,CAAC,CACnCQ,SAAS,CAACC,IAAI,IAAG;YACdc,MAAI,CAACtB,cAAc,GAAQQ,IAAK;YAChCc,MAAI,CAACtB,cAAc,CAACW,OAAO,CAAEC,OAAY,IAAI;cACzC,IAAIW,IAAI,GAAGX,OAAO,CAAC,MAAM,CAAC,CAACY,KAAK,CAAC,GAAG,CAAC;cACrC,IAAIC,UAAU,GAAY;gBAAC,IAAI,EAAEb,OAAO,CAAC,IAAI,CAAC;gBAAE,WAAW,EAAEW,IAAI,CAAC,CAAC,CAAC;gBAAE,UAAU,EAAEA,IAAI,CAAC,CAAC;cAAC,CAAC;cAC1FD,MAAI,CAAC1B,WAAW,CAACuB,IAAI,CAACM,UAAU,CAAC;YAGrC,CAAC,CAAC;YACFH,MAAI,CAACzB,SAAS,CAACuB,IAAI,CAACE,MAAI,CAAC1B,WAAW,CAAC;UACzC,CAAC,CACA;SACJ,CAAC,OAAOiB,KAAK,EAAE;UACZJ,OAAO,CAACI,KAAK,CAAC,iBAAiB,CAAC;UAChC,MAAMA,KAAK;;MACd;IACL;;uBAxESnB,cAAc,EAAAgC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;;aAAdnC,cAAc;MAAAoC,OAAA,EAAdpC,cAAc,CAAAqC,IAAA;MAAAC,UAAA,EAHX;IAAM;;SAGTtC,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}