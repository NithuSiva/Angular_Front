{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../services/ticket/ticket.service\";\nexport let TicketFormComponent = /*#__PURE__*/(() => {\n  class TicketFormComponent {\n    formBuilder;\n    ticketService;\n    // Note: We are using here ReactiveForms to create our form. Be careful when you look for some documentation to\n    // avoid TemplateDrivenForm (another type of form)\n    /**\n     * TicketForm: Object which manages the form in our component.\n     * More information about Reactive Forms: https://angular.io/guide/reactive-forms\n     */\n    ticketForm;\n    constructor(formBuilder, ticketService) {\n      this.formBuilder = formBuilder;\n      this.ticketService = ticketService;\n      // Form creation\n      this.ticketForm = this.formBuilder.group({\n        title: [''],\n        description: [''],\n        major: ['']\n      });\n      // You can also add validators to your inputs such as required, maxlength or even create your own validator!\n      // More information: https://angular.io/guide/reactive-forms#simple-form-validation\n      // Advanced validation: https://angular.io/guide/form-validation#reactive-form-validation\n    }\n\n    ngOnInit() {}\n    addTicket() {\n      const ticketToCreate = this.ticketForm.getRawValue();\n      ticketToCreate.date = new Date();\n      ticketToCreate.student = 'Me';\n      this.ticketService.addTicket(ticketToCreate);\n    }\n    static ɵfac = function TicketFormComponent_Factory(t) {\n      return new (t || TicketFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.TicketService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TicketFormComponent,\n      selectors: [[\"app-ticket-form\"]],\n      decls: 37,\n      vars: 4,\n      consts: [[1, \"ticket-form\", 3, \"formGroup\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", 1, \"input-custom\", 3, \"formControlName\"], [\"for\", \"description\"], [\"type\", \"text\", \"id\", \"description\", 1, \"input-custom\", 3, \"formControlName\"], [\"for\", \"major\"], [\"type\", \"text\", \"id\", \"major\", 1, \"input-custom\", 3, \"formControlName\"], [\"for\", \"pet-select\"], [\"name\", \"pets\", \"id\", \"pet-select\"], [\"value\", \"\"], [\"value\", \"dog\"], [\"value\", \"cat\"], [\"value\", \"hamster\"], [\"value\", \"parrot\"], [\"value\", \"spider\"], [\"value\", \"goldfish\"], [\"type\", \"submit\", 1, \"btn-custom\", 3, \"click\"]],\n      template: function TicketFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h3\");\n          i0.ɵɵtext(1, \"Create a new ticket\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"form\", 0)(3, \"label\", 1);\n          i0.ɵɵtext(4, \" Title \");\n          i0.ɵɵelement(5, \"br\")(6, \"input\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"br\");\n          i0.ɵɵelementStart(8, \"label\", 3);\n          i0.ɵɵtext(9, \" Description \");\n          i0.ɵɵelement(10, \"br\")(11, \"input\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(12, \"br\");\n          i0.ɵɵelementStart(13, \"label\", 5);\n          i0.ɵɵtext(14, \" Major \");\n          i0.ɵɵelement(15, \"br\")(16, \"input\", 6);\n          i0.ɵɵelementStart(17, \"label\", 7);\n          i0.ɵɵtext(18, \"Choose a pet:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"select\", 8)(20, \"option\", 9);\n          i0.ɵɵtext(21, \"--Please choose an option--\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"option\", 10);\n          i0.ɵɵtext(23, \"Dog\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(24, \"option\", 11);\n          i0.ɵɵtext(25, \"Cat\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(26, \"option\", 12);\n          i0.ɵɵtext(27, \"Hamster\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(28, \"option\", 13);\n          i0.ɵɵtext(29, \"Parrot\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(30, \"option\", 14);\n          i0.ɵɵtext(31, \"Spider\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(32, \"option\", 15);\n          i0.ɵɵtext(33, \"Goldfish\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelement(34, \"br\");\n          i0.ɵɵelementStart(35, \"button\", 16);\n          i0.ɵɵlistener(\"click\", function TicketFormComponent_Template_button_click_35_listener() {\n            return ctx.addTicket();\n          });\n          i0.ɵɵtext(36, \"Create\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"formGroup\", ctx.ticketForm);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"formControlName\", \"title\");\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"formControlName\", \"description\");\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"formControlName\", \"major\");\n        }\n      },\n      dependencies: [i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\"\\n\\n\\n\\n.card[_ngcontent-%COMP%] {\\n  box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 5px 5px 1px rgba(0, 0, 0, 0.12);\\n  padding-left: 2em;\\n  padding-right: 1em;\\n  padding-top: 1em;\\n  padding-bottom: 1em;\\n  border-radius: 0.5em;\\n  background-color: white;\\n}\\n\\n.input-custom[_ngcontent-%COMP%], .btn-custom[_ngcontent-%COMP%] {\\n  border: 1px solid #282828;\\n  border-radius: 0.5em;\\n  height: 35px;\\n}\\n\\n.input-custom[_ngcontent-%COMP%] {\\n  padding: 1px 0 1px 10px;\\n}\\n\\n.btn-custom[_ngcontent-%COMP%] {\\n  margin-top: 0.4em;\\n  background-color: white;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  background-color: transparent;\\n  border: none;\\n  font-size: 1em;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9zdHlsZXMvdmFyaWFibGVzLnNjc3MiLCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGVzL2NhcmQuc2NzcyIsIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGlja2V0cy90aWNrZXQtZm9ybS90aWNrZXQtZm9ybS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7RUFBQTtBQ0VBO0VBQ0UsaUhBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxtQkFBQTtFQUNBLG9CREdhO0VDRmIsdUJBQUE7QUNFRjs7QURDQTtFQUNFLHlCQUFBO0VBQ0Esb0JESGE7RUNJYixZQUFBO0FDRUY7O0FEQ0E7RUFDRSx1QkFBQTtBQ0VGOztBRENBO0VBQ0UsaUJBQUE7RUFDQSx1QkFBQTtBQ0VGOztBQXhCQTtFQUNFLDZCQUFBO0VBQ0EsWUFBQTtFQUNBLGNBQUE7QUEyQkYiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuIFRoaXMgZmlsZSBjb250YWlucyBhbGwgdGhlIHZhcmlhYmxlcyB1c2VkIGZvciBzdHlsaW5nIHlvdXIgYXBwLlxyXG4gKi9cclxuXHJcbi8vIENvbG9yc1xyXG4kYmFja2dyb3VuZC1jb2xvcjogI0YwRjBGMDtcclxuJGxpbmVhckdyYWRpZW50OiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICMyNGM2ZGMsICM1MTRhOWQpO1xyXG5cclxuJHdoaXRlOiB3aGl0ZTtcclxuXHJcbi8vIEJvcmRlcnNcclxuJGJvcmRlclJhZGl1czogMC41ZW07XHJcbiIsIkBpbXBvcnQgXCIuL3ZhcmlhYmxlc1wiO1xyXG5cclxuLmNhcmQge1xyXG4gIGJveC1zaGFkb3c6IDAgM3B4IDFweCAtMnB4IHJnYmEoMCwwLDAsLjIpLCAwIDJweCAycHggMCByZ2JhKDAsMCwwLC4xNCksIDAgNXB4IDVweCAxcHggcmdiYSgwLDAsMCwuMTIpO1xyXG4gIHBhZGRpbmctbGVmdDogMmVtO1xyXG4gIHBhZGRpbmctcmlnaHQ6IDFlbTtcclxuICBwYWRkaW5nLXRvcDogMWVtO1xyXG4gIHBhZGRpbmctYm90dG9tOiAxZW07XHJcbiAgYm9yZGVyLXJhZGl1czogJGJvcmRlclJhZGl1cztcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuLmlucHV0LWN1c3RvbSwgLmJ0bi1jdXN0b20ge1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICMyODI4Mjg7XHJcbiAgYm9yZGVyLXJhZGl1czogJGJvcmRlclJhZGl1cztcclxuICBoZWlnaHQ6IDM1cHg7XHJcbn1cclxuXHJcbi5pbnB1dC1jdXN0b20ge1xyXG4gIHBhZGRpbmc6IDFweCAwIDFweCAxMHB4O1xyXG59XHJcblxyXG4uYnRuLWN1c3RvbSB7XHJcbiAgbWFyZ2luLXRvcDogMC40ZW07XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbn1cclxuIiwiQGltcG9ydCAnLi4vLi4vLi4vc3R5bGVzL2NhcmQuc2Nzcyc7XHJcblxyXG5idXR0b24ge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gIGJvcmRlcjogbm9uZTtcclxuICBmb250LXNpemU6IDFlbTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n  return TicketFormComponent;\n})();","map":{"version":3,"names":["TicketFormComponent","formBuilder","ticketService","ticketForm","constructor","group","title","description","major","ngOnInit","addTicket","ticketToCreate","getRawValue","date","Date","student","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","TicketService","selectors","decls","vars","consts","template","TicketFormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","TicketFormComponent_Template_button_click_35_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Ni2\\Documents\\M1_git\\web\\Angular_Front\\src\\app\\tickets\\ticket-form\\ticket-form.component.ts","C:\\Users\\Ni2\\Documents\\M1_git\\web\\Angular_Front\\src\\app\\tickets\\ticket-form\\ticket-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { TicketService } from '../../../services/ticket/ticket.service';\r\nimport { Ticket } from '../../../models/ticket';\r\n\r\n@Component({\r\n  selector: 'app-ticket-form',\r\n  templateUrl: './ticket-form.component.html',\r\n  styleUrls: ['./ticket-form.component.scss']\r\n})\r\nexport class TicketFormComponent implements OnInit {\r\n\r\n  // Note: We are using here ReactiveForms to create our form. Be careful when you look for some documentation to\r\n  // avoid TemplateDrivenForm (another type of form)\r\n  /**\r\n   * TicketForm: Object which manages the form in our component.\r\n   * More information about Reactive Forms: https://angular.io/guide/reactive-forms\r\n   */\r\n  public ticketForm: FormGroup;\r\n\r\n  constructor(public formBuilder: FormBuilder, public ticketService: TicketService) {\r\n    // Form creation\r\n    this.ticketForm = this.formBuilder.group({\r\n      title: [''],\r\n      description: [''],\r\n      major: ['']\r\n    });\r\n    // You can also add validators to your inputs such as required, maxlength or even create your own validator!\r\n    // More information: https://angular.io/guide/reactive-forms#simple-form-validation\r\n    // Advanced validation: https://angular.io/guide/form-validation#reactive-form-validation\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  addTicket() {\r\n    const ticketToCreate: Ticket = this.ticketForm.getRawValue() as Ticket;\r\n    ticketToCreate.date = new Date();\r\n    ticketToCreate.student = 'Me';\r\n    this.ticketService.addTicket(ticketToCreate);\r\n  }\r\n\r\n}\r\n","<h3>Create a new ticket</h3>\r\n<form class=\"ticket-form\" [formGroup]=\"ticketForm\">\r\n  <label for=\"title\">\r\n    Title <br>\r\n    <input class=\"input-custom\" type=\"text\" id=\"title\" [formControlName]=\"'title'\">\r\n  </label>\r\n  <br>\r\n  <label for=\"description\">\r\n    Description <br>\r\n    <input class=\"input-custom\" type=\"text\" id=\"description\" [formControlName]=\"'description'\">\r\n  </label>\r\n  <br>\r\n  <label for=\"major\">\r\n    Major <br>\r\n    <input class=\"input-custom\" type=\"text\" id=\"major\" [formControlName]=\"'major'\">\r\n    <label for=\"pet-select\">Choose a pet:</label>\r\n\r\n<select name=\"pets\" id=\"pet-select\">\r\n  <option value=\"\">--Please choose an option--</option>\r\n  <option value=\"dog\">Dog</option>\r\n  <option value=\"cat\">Cat</option>\r\n  <option value=\"hamster\">Hamster</option>\r\n  <option value=\"parrot\">Parrot</option>\r\n  <option value=\"spider\">Spider</option>\r\n  <option value=\"goldfish\">Goldfish</option>\r\n</select>\r\n\r\n  </label>\r\n  <br>\r\n  <button type=\"submit\" class=\"btn-custom\" (click)=\"addTicket()\">Create</button>\r\n</form>\r\n\r\n<!-- Uncomment below to see your form structure and how it changes-->\r\n<!--<br><br>{{ticketForm.getRawValue() | json}}-->\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}