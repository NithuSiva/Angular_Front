{"ast":null,"code":"import { TICKETS_MOCKED } from '../../mocks/tickets.mock';\nimport * as i0 from \"@angular/core\";\n// import { BehaviorSubject } from 'rxjs/index';\nexport let TicketService = /*#__PURE__*/(() => {\n  class TicketService {\n    /**\n     * Services Documentation:\n     * https://angular.io/docs/ts/latest/tutorial/toh-pt4.html\n     */\n    ticketList = TICKETS_MOCKED;\n    /**\n     * Observable which contains the list of the tickets.\n     * Naming convention: Add '$' at the end of the variable name to highlight it as an Observable.\n     */\n    tickets$ = new BehaviorSubject(this.ticketList);\n    constructor() {}\n    addTicket(ticket) {\n      // You need here to update the list of ticket and then update our observable (Subject) with the new list\n      // More info: https://angular.io/tutorial/toh-pt6#the-searchterms-rxjs-subject\n    }\n    static ɵfac = function TicketService_Factory(t) {\n      return new (t || TicketService)();\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TicketService,\n      factory: TicketService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return TicketService;\n})();","map":{"version":3,"names":["TICKETS_MOCKED","TicketService","ticketList","tickets$","BehaviorSubject","constructor","addTicket","ticket","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Ni2\\Documents\\M1_git\\web\\Angular_Front\\src\\services\\ticket\\ticket.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Ticket } from '../../models/ticket';\r\nimport { TICKETS_MOCKED } from '../../mocks/tickets.mock';\r\n// import { BehaviorSubject } from 'rxjs/index';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TicketService {\r\n  /**\r\n   * Services Documentation:\r\n   * https://angular.io/docs/ts/latest/tutorial/toh-pt4.html\r\n   */\r\n\r\n  private ticketList: Ticket[] = TICKETS_MOCKED;\r\n\r\n  /**\r\n   * Observable which contains the list of the tickets.\r\n   * Naming convention: Add '$' at the end of the variable name to highlight it as an Observable.\r\n   */\r\n  public tickets$: BehaviorSubject<Ticket[]> = new BehaviorSubject(this.ticketList);\r\n\r\n  constructor() {\r\n  }\r\n\r\n  addTicket(ticket: Ticket) {\r\n    // You need here to update the list of ticket and then update our observable (Subject) with the new list\r\n    // More info: https://angular.io/tutorial/toh-pt6#the-searchterms-rxjs-subject\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAASA,cAAc,QAAQ,0BAA0B;;AACzD;AAKA,WAAaC,aAAa;EAApB,MAAOA,aAAa;IACxB;;;;IAKQC,UAAU,GAAaF,cAAc;IAE7C;;;;IAIOG,QAAQ,GAA8B,IAAIC,eAAe,CAAC,IAAI,CAACF,UAAU,CAAC;IAEjFG,YAAA,GACA;IAEAC,SAASA,CAACC,MAAc;MACtB;MACA;IAAA;;uBAnBSN,aAAa;IAAA;;aAAbA,aAAa;MAAAO,OAAA,EAAbP,aAAa,CAAAQ,IAAA;MAAAC,UAAA,EAFZ;IAAM;;SAEPT,aAAa;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}