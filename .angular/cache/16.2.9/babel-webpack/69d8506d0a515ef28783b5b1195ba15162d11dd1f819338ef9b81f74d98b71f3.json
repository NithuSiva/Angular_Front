{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { STUDENTS_MOCKED } from 'src/mocks/student.mock';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let StudentService = /*#__PURE__*/(() => {\n  class StudentService {\n    _httpClient;\n    studentList = STUDENTS_MOCKED;\n    students$ = new BehaviorSubject(this.studentList);\n    url = \"https://jsonplaceholder.typicode.com/users\";\n    studentListApi;\n    constructor(_httpClient) {\n      this._httpClient = _httpClient;\n    }\n    getApiAndClearStudent() {\n      console.log(this.url);\n      this.this._httpClient.get(this.url).get(this.url).subscribe(data => this.studentListApi = data);\n      console.log(this.studentListApi);\n      let newList = [];\n      // this.studentListApi[0].forEach((element: any) => {\n      //     console.log(element);\n      // });\n    }\n\n    static ɵfac = function StudentService_Factory(t) {\n      return new (t || StudentService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: StudentService,\n      factory: StudentService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return StudentService;\n})();","map":{"version":3,"names":["BehaviorSubject","STUDENTS_MOCKED","StudentService","_httpClient","studentList","students$","url","studentListApi","constructor","getApiAndClearStudent","console","log","this","get","subscribe","data","newList","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Ni2\\Documents\\M1_git\\web\\Angular_Front\\src\\services\\student\\student.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { STUDENTS_MOCKED } from 'src/mocks/student.mock';\r\nimport { Student } from 'src/models/student';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class StudentService {\r\n\r\n    private studentList: Student[] = STUDENTS_MOCKED;\r\n    public students$: BehaviorSubject<Student[]> = new BehaviorSubject(this.studentList);\r\n    public url: string = \"https://jsonplaceholder.typicode.com/users\";\r\n    public studentListApi: any;\r\n    constructor(private _httpClient: HttpClient) {\r\n        \r\n    }\r\n\r\n    public getApiAndClearStudent() {\r\n        console.log(this.url);\r\n        this.    this._httpClient.get(this.url)\r\n        .get(this.url).subscribe(data =>\r\n            this.studentListApi= data\r\n        );\r\n        console.log(this.studentListApi);\r\n        let newList = [];\r\n        // this.studentListApi[0].forEach((element: any) => {\r\n        //     console.log(element);\r\n        // });\r\n    }\r\n} "],"mappings":"AAEA,SAASA,eAAe,QAAQ,MAAM;AACtC,SAASC,eAAe,QAAQ,wBAAwB;;;AAOxD,WAAaC,cAAc;EAArB,MAAOA,cAAc;IAMHC,WAAA;IAJZC,WAAW,GAAcH,eAAe;IACzCI,SAAS,GAA+B,IAAIL,eAAe,CAAC,IAAI,CAACI,WAAW,CAAC;IAC7EE,GAAG,GAAW,4CAA4C;IAC1DC,cAAc;IACrBC,YAAoBL,WAAuB;MAAvB,KAAAA,WAAW,GAAXA,WAAW;IAE/B;IAEOM,qBAAqBA,CAAA;MACxBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,GAAG,CAAC;MACrB,IAAI,CAAKM,IAAI,CAACT,WAAW,CAACU,GAAG,CAAC,IAAI,CAACP,GAAG,CAAC,CACtCO,GAAG,CAAC,IAAI,CAACP,GAAG,CAAC,CAACQ,SAAS,CAACC,IAAI,IACzB,IAAI,CAACR,cAAc,GAAEQ,IAAI,CAC5B;MACDL,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,cAAc,CAAC;MAChC,IAAIS,OAAO,GAAG,EAAE;MAChB;MACA;MACA;IACJ;;;uBArBSd,cAAc,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;;aAAdlB,cAAc;MAAAmB,OAAA,EAAdnB,cAAc,CAAAoB,IAAA;MAAAC,UAAA,EAHX;IAAM;;SAGTrB,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}