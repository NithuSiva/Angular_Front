{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Ni2/Documents/Angular_Front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nexport let TicketService = class TicketService {\n  _httpClient;\n  studentService;\n  ticketList = [];\n  tickets$ = new BehaviorSubject(this.ticketList);\n  ticketListApi;\n  constructor(_httpClient, studentService) {\n    this._httpClient = _httpClient;\n    this.studentService = studentService;\n  }\n  getBackEndTicketList() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      let urlBackEnd = \"http://localhost:3000/api/tickets\";\n      try {\n        yield _this._httpClient.get(urlBackEnd).subscribe(data => {\n          _this.ticketListApi = data;\n          _this.ticketListApi.forEach(element => {\n            let newStudent = {\n              'title': element['title'],\n              'description': element['FirstName'],\n              'date': element['LastName'],\n              'student': element['student'],\n              'major': element['major'],\n              'archived': element['archived']\n            };\n            _this.ticketList.push(newStudent);\n          });\n          _this.tickets$.next(_this.ticketList);\n        });\n      } catch (error) {\n        console.error(\"Erreur HTTP GET\");\n        throw error;\n      }\n    })();\n  }\n  addTicket(ticket) {\n    // You need here to update the list of ticket and then update our observable (Subject) with the new list\n    // More info: https://angular.io/tutorial/toh-pt6#the-searchterms-rxjs-subject\n    this.tickets$.value.push(ticket);\n    console.log(\"Ajout dans la liste: \", this.tickets$.value);\n    this.tickets$.next(this.ticketList);\n  }\n  archivedTicket(ticket) {\n    ticket.archived = true;\n    this.tickets$.next(this.ticketList);\n  }\n  deletedTicket(ticket) {\n    // this.tickets$.value.filter(tick => tick != ticket);\n    this.tickets$.value.splice(this.tickets$.value.indexOf(ticket), 1);\n    console.log(\"Suppresion dans la liste: \", this.tickets$.value);\n    this.tickets$.next(this.ticketList);\n  }\n};\nTicketService = __decorate([Injectable({\n  providedIn: 'root'\n})], TicketService);","map":{"version":3,"names":["Injectable","BehaviorSubject","TicketService","_httpClient","studentService","ticketList","tickets$","ticketListApi","constructor","getBackEndTicketList","_this","_asyncToGenerator","urlBackEnd","get","subscribe","data","forEach","element","newStudent","push","next","error","console","addTicket","ticket","value","log","archivedTicket","archived","deletedTicket","splice","indexOf","__decorate","providedIn"],"sources":["C:\\Users\\Ni2\\Documents\\Angular_Front\\src\\services\\ticket\\ticket.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Ticket } from '../../models/ticket';\r\nimport { Student } from 'src/models/student';\r\nimport { TICKETS_MOCKED } from '../../mocks/tickets.mock';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TicketService {\r\n\r\n  private ticketList: Ticket[] = [];\r\n\r\n  public tickets$: BehaviorSubject<Ticket[]> = new BehaviorSubject(this.ticketList);\r\n\r\n  private ticketListApi: any;\r\n\r\n\r\n  constructor(private _httpClient: HttpClient, public studentService: StudentService) {\r\n  }\r\n\r\n  async getBackEndTicketList(): Promise<void> {\r\n    let urlBackEnd = \"http://localhost:3000/api/tickets\";\r\n    try {\r\n        await this._httpClient.get(urlBackEnd)\r\n        .subscribe(data => {\r\n            this.ticketListApi= (<any>data);\r\n            this.ticketListApi.forEach((element: any) => {\r\n                let newStudent: Ticket = {\r\n\r\n                  'title' :element['title'], \r\n                  'description': element['FirstName'], \r\n                  'date': element['LastName'],\r\n                  'student': element['student'],\r\n                  'major': element['major'],\r\n                  'archived': element['archived'] \r\n\r\n                };\r\n                this.ticketList.push(newStudent);\r\n            });\r\n            this.tickets$.next(this.ticketList);\r\n        }\r\n        );\r\n    } catch (error) {\r\n        console.error(\"Erreur HTTP GET\");\r\n        throw error;\r\n    }\r\n}\r\n\r\n  addTicket(ticket: Ticket) {\r\n    // You need here to update the list of ticket and then update our observable (Subject) with the new list\r\n    // More info: https://angular.io/tutorial/toh-pt6#the-searchterms-rxjs-subject\r\n    this.tickets$.value.push(ticket);\r\n    console.log(\"Ajout dans la liste: \", this.tickets$.value);\r\n    this.tickets$.next(this.ticketList)\r\n  }\r\n\r\n  archivedTicket(ticket: Ticket) {\r\n    ticket.archived = true;\r\n    this.tickets$.next(this.ticketList);\r\n  }\r\n\r\n   deletedTicket(ticket: Ticket) {\r\n    // this.tickets$.value.filter(tick => tick != ticket);\r\n    this.tickets$.value.splice(this.tickets$.value.indexOf(ticket), 1);\r\n    console.log(\"Suppresion dans la liste: \", this.tickets$.value);\r\n    this.tickets$.next(this.ticketList)\r\n  } \r\n}\r\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,eAAe;AAI1C,SAASC,eAAe,QAAQ,MAAM;AAM/B,WAAMC,aAAa,GAAnB,MAAMA,aAAa;EASJC,WAAA;EAAgCC,cAAA;EAP5CC,UAAU,GAAa,EAAE;EAE1BC,QAAQ,GAA8B,IAAIL,eAAe,CAAC,IAAI,CAACI,UAAU,CAAC;EAEzEE,aAAa;EAGrBC,YAAoBL,WAAuB,EAASC,cAA8B;IAA9D,KAAAD,WAAW,GAAXA,WAAW;IAAqB,KAAAC,cAAc,GAAdA,cAAc;EAClE;EAEMK,oBAAoBA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACxB,IAAIC,UAAU,GAAG,mCAAmC;MACpD,IAAI;QACA,MAAMF,KAAI,CAACP,WAAW,CAACU,GAAG,CAACD,UAAU,CAAC,CACrCE,SAAS,CAACC,IAAI,IAAG;UACdL,KAAI,CAACH,aAAa,GAAQQ,IAAK;UAC/BL,KAAI,CAACH,aAAa,CAACS,OAAO,CAAEC,OAAY,IAAI;YACxC,IAAIC,UAAU,GAAW;cAEvB,OAAO,EAAED,OAAO,CAAC,OAAO,CAAC;cACzB,aAAa,EAAEA,OAAO,CAAC,WAAW,CAAC;cACnC,MAAM,EAAEA,OAAO,CAAC,UAAU,CAAC;cAC3B,SAAS,EAAEA,OAAO,CAAC,SAAS,CAAC;cAC7B,OAAO,EAAEA,OAAO,CAAC,OAAO,CAAC;cACzB,UAAU,EAAEA,OAAO,CAAC,UAAU;aAE/B;YACDP,KAAI,CAACL,UAAU,CAACc,IAAI,CAACD,UAAU,CAAC;UACpC,CAAC,CAAC;UACFR,KAAI,CAACJ,QAAQ,CAACc,IAAI,CAACV,KAAI,CAACL,UAAU,CAAC;QACvC,CAAC,CACA;OACJ,CAAC,OAAOgB,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,iBAAiB,CAAC;QAChC,MAAMA,KAAK;;IACd;EACL;EAEEE,SAASA,CAACC,MAAc;IACtB;IACA;IACA,IAAI,CAAClB,QAAQ,CAACmB,KAAK,CAACN,IAAI,CAACK,MAAM,CAAC;IAChCF,OAAO,CAACI,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAACpB,QAAQ,CAACmB,KAAK,CAAC;IACzD,IAAI,CAACnB,QAAQ,CAACc,IAAI,CAAC,IAAI,CAACf,UAAU,CAAC;EACrC;EAEAsB,cAAcA,CAACH,MAAc;IAC3BA,MAAM,CAACI,QAAQ,GAAG,IAAI;IACtB,IAAI,CAACtB,QAAQ,CAACc,IAAI,CAAC,IAAI,CAACf,UAAU,CAAC;EACrC;EAECwB,aAAaA,CAACL,MAAc;IAC3B;IACA,IAAI,CAAClB,QAAQ,CAACmB,KAAK,CAACK,MAAM,CAAC,IAAI,CAACxB,QAAQ,CAACmB,KAAK,CAACM,OAAO,CAACP,MAAM,CAAC,EAAE,CAAC,CAAC;IAClEF,OAAO,CAACI,GAAG,CAAC,4BAA4B,EAAE,IAAI,CAACpB,QAAQ,CAACmB,KAAK,CAAC;IAC9D,IAAI,CAACnB,QAAQ,CAACc,IAAI,CAAC,IAAI,CAACf,UAAU,CAAC;EACrC;CACD;AA3DYH,aAAa,GAAA8B,UAAA,EAHzBhC,UAAU,CAAC;EACViC,UAAU,EAAE;CACb,CAAC,C,EACW/B,aAAa,CA2DzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}