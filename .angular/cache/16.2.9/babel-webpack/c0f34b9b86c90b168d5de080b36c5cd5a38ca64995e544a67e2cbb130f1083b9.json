{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Ni2/Documents/M1_git/web/Angular_Front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let StudentService = /*#__PURE__*/(() => {\n  class StudentService {\n    _httpClient;\n    studentList = [];\n    students$ = new BehaviorSubject([]);\n    url = \"https://jsonplaceholder.typicode.com/users\";\n    studentListApi;\n    constructor(_httpClient) {\n      this._httpClient = _httpClient;\n    }\n    static ɵfac = function StudentService_Factory(t) {\n      return new (t || StudentService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: StudentService,\n      factory: StudentService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return StudentService;\n})();\nfunction getApiAndClearStudent() {\n  return _getApiAndClearStudent.apply(this, arguments);\n}\nfunction _getApiAndClearStudent() {\n  _getApiAndClearStudent = _asyncToGenerator(function* () {\n    console.log(\"HTTP GET !\");\n    yield this._httpClient.get(this.url).subscribe(data => {\n      this.studentListApi = data;\n      this.studentListApi.forEach(element => {\n        let temp = element['name'].split(' ');\n        let newStudent = {\n          'id': element['id'],\n          'firstName': temp[0],\n          'lastName': temp[1]\n        };\n        this.studentList.push(newStudent);\n      });\n      console.log(\"Service liste maj\", this.studentList);\n      this.students$.next(this.studentList);\n    });\n  });\n  return _getApiAndClearStudent.apply(this, arguments);\n}","map":{"version":3,"names":["BehaviorSubject","StudentService","_httpClient","studentList","students$","url","studentListApi","constructor","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn","getApiAndClearStudent","_getApiAndClearStudent","apply","arguments","_asyncToGenerator","console","log","get","subscribe","data","forEach","element","temp","split","newStudent","push","next"],"sources":["C:\\Users\\Ni2\\Documents\\M1_git\\web\\Angular_Front\\src\\services\\student\\student.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, last } from 'rxjs';\r\nimport { STUDENTS_MOCKED } from 'src/mocks/student.mock';\r\nimport { Student } from 'src/models/student';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class StudentService {\r\n\r\n    private studentList: Student[] = [];\r\n    public students$: BehaviorSubject<any[]> = new BehaviorSubject<any>([]);\r\n    public url: string = \"https://jsonplaceholder.typicode.com/users\";\r\n    private studentListApi: any;\r\n    constructor(private _httpClient: HttpClient) {\r\n        \r\n    }\r\n\r\n    async function getApiAndClearStudent() {\r\n        console.log(\"HTTP GET !\")\r\n        await this._httpClient.get(this.url)\r\n        .subscribe(data => {\r\n            this.studentListApi= (<any>data);\r\n            this.studentListApi.forEach((element: any) => {\r\n                let temp = element['name'].split(' ');\r\n                let newStudent: Student = {'id' :element['id'], 'firstName': temp[0], 'lastName': temp[1]};\r\n                this.studentList.push(newStudent);\r\n\r\n                \r\n            });\r\n            console.log(\"Service liste maj\", this.studentList);\r\n            this.students$.next(this.studentList);\r\n        }\r\n        );\r\n    }\r\n} "],"mappings":";AAEA,SAASA,eAAe,QAAc,MAAM;;;AAQ5C,WAAaC,cAAc;EAArB,MAAOA,cAAc;IAMHC,WAAA;IAJZC,WAAW,GAAc,EAAE;IAC5BC,SAAS,GAA2B,IAAIJ,eAAe,CAAM,EAAE,CAAC;IAChEK,GAAG,GAAW,4CAA4C;IACzDC,cAAc;IACtBC,YAAoBL,WAAuB;MAAvB,KAAAA,WAAW,GAAXA,WAAW;IAE/B;;uBARSD,cAAc,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;;aAAdV,cAAc;MAAAW,OAAA,EAAdX,cAAc,CAAAY,IAAA;MAAAC,UAAA,EAHX;IAAM;;SAGTb,cAAc;AAAA;SAURc,qBAAqBA,CAAA;EAAA,OAAAC,sBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,uBAAA;EAAAA,sBAAA,GAAAG,iBAAA,CAApC,aAAoC;IAChCC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IACzB,MAAM,IAAI,CAACnB,WAAW,CAACoB,GAAG,CAAC,IAAI,CAACjB,GAAG,CAAC,CACnCkB,SAAS,CAACC,IAAI,IAAG;MACd,IAAI,CAAClB,cAAc,GAAQkB,IAAK;MAChC,IAAI,CAAClB,cAAc,CAACmB,OAAO,CAAEC,OAAY,IAAI;QACzC,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC,CAACE,KAAK,CAAC,GAAG,CAAC;QACrC,IAAIC,UAAU,GAAY;UAAC,IAAI,EAAEH,OAAO,CAAC,IAAI,CAAC;UAAE,WAAW,EAAEC,IAAI,CAAC,CAAC,CAAC;UAAE,UAAU,EAAEA,IAAI,CAAC,CAAC;QAAC,CAAC;QAC1F,IAAI,CAACxB,WAAW,CAAC2B,IAAI,CAACD,UAAU,CAAC;MAGrC,CAAC,CAAC;MACFT,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAClB,WAAW,CAAC;MAClD,IAAI,CAACC,SAAS,CAAC2B,IAAI,CAAC,IAAI,CAAC5B,WAAW,CAAC;IACzC,CAAC,CACA;EACL,CAAC;EAAA,OAAAa,sBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}