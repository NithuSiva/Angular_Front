{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { STUDENTS_MOCKED } from 'src/mocks/student.mock';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let StudentService = /*#__PURE__*/(() => {\n  class StudentService {\n    _httpClient;\n    student;\n    studentList = STUDENTS_MOCKED;\n    students$ = new BehaviorSubject(this.studentList);\n    url = \"https://jsonplaceholder.typicode.com/users\";\n    studentListApi;\n    constructor(_httpClient) {\n      this._httpClient = _httpClient;\n    }\n    getApiAndClearStudent() {\n      this._httpClient.get(this.url).subscribe(data => {\n        console.log(data);\n        this.studentListApi = data;\n        let newListStudent = [];\n        console.log(this.students$);\n        this.studentListApi.forEach(element => {\n          newListStudent.push(element['id']);\n          console.log(element['id']);\n        });\n      });\n    }\n    static ɵfac = function StudentService_Factory(t) {\n      return new (t || StudentService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: StudentService,\n      factory: StudentService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return StudentService;\n})();","map":{"version":3,"names":["BehaviorSubject","STUDENTS_MOCKED","StudentService","_httpClient","student","studentList","students$","url","studentListApi","constructor","getApiAndClearStudent","get","subscribe","data","console","log","newListStudent","forEach","element","push","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Ni2\\Documents\\M1_git\\web\\Angular_Front\\src\\services\\student\\student.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, last } from 'rxjs';\r\nimport { STUDENTS_MOCKED } from 'src/mocks/student.mock';\r\nimport { Student } from 'src/models/student';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class StudentService {\r\n\r\n    private student!: Student;\r\n    private studentList: Student[] = STUDENTS_MOCKED;\r\n    public students$: BehaviorSubject<Student[]> = new BehaviorSubject(this.studentList);\r\n    public url: string = \"https://jsonplaceholder.typicode.com/users\";\r\n    private studentListApi: any;\r\n    constructor(private _httpClient: HttpClient) {\r\n        \r\n    }\r\n\r\n    public getApiAndClearStudent() {\r\n        this._httpClient.get(this.url)\r\n        .subscribe(data => {\r\n            console.log(data);\r\n            this.studentListApi= (<any>data);\r\n            let newListStudent = [];\r\n            console.log(this.students$);\r\n            this.studentListApi.forEach((element: any) => {\r\n                newListStudent.push(element['id']);\r\n                console.log(element['id']);\r\n            });\r\n        }\r\n        );\r\n    }\r\n} "],"mappings":"AAEA,SAASA,eAAe,QAAc,MAAM;AAC5C,SAASC,eAAe,QAAQ,wBAAwB;;;AAOxD,WAAaC,cAAc;EAArB,MAAOA,cAAc;IAOHC,WAAA;IALZC,OAAO;IACPC,WAAW,GAAcJ,eAAe;IACzCK,SAAS,GAA+B,IAAIN,eAAe,CAAC,IAAI,CAACK,WAAW,CAAC;IAC7EE,GAAG,GAAW,4CAA4C;IACzDC,cAAc;IACtBC,YAAoBN,WAAuB;MAAvB,KAAAA,WAAW,GAAXA,WAAW;IAE/B;IAEOO,qBAAqBA,CAAA;MACxB,IAAI,CAACP,WAAW,CAACQ,GAAG,CAAC,IAAI,CAACJ,GAAG,CAAC,CAC7BK,SAAS,CAACC,IAAI,IAAG;QACdC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QACjB,IAAI,CAACL,cAAc,GAAQK,IAAK;QAChC,IAAIG,cAAc,GAAG,EAAE;QACvBF,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,SAAS,CAAC;QAC3B,IAAI,CAACE,cAAc,CAACS,OAAO,CAAEC,OAAY,IAAI;UACzCF,cAAc,CAACG,IAAI,CAACD,OAAO,CAAC,IAAI,CAAC,CAAC;UAClCJ,OAAO,CAACC,GAAG,CAACG,OAAO,CAAC,IAAI,CAAC,CAAC;QAC9B,CAAC,CAAC;MACN,CAAC,CACA;IACL;;uBAxBShB,cAAc,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;;aAAdrB,cAAc;MAAAsB,OAAA,EAAdtB,cAAc,CAAAuB,IAAA;MAAAC,UAAA,EAHX;IAAM;;SAGTxB,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}