{"ast":null,"code":"import { TICKETS_MOCKED } from '../../mocks/tickets.mock';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let TicketService = /*#__PURE__*/(() => {\n  class TicketService {\n    /**\n     * Services Documentation:\n     * https://angular.io/docs/ts/latest/tutorial/toh-pt4.html\n     */\n    ticketList = TICKETS_MOCKED;\n    /**\n     * Observable which contains the list of the tickets.\n     * Naming convention: Add '$' at the end of the variable name to highlight it as an Observable.\n     */\n    tickets$ = new BehaviorSubject(this.ticketList);\n    constructor() {}\n    addTicket(ticket) {\n      // You need here to update the list of ticket and then update our observable (Subject) with the new list\n      // More info: https://angular.io/tutorial/toh-pt6#the-searchterms-rxjs-subject\n      this.tickets$.value.push(ticket);\n      console.log(\"Ajout dans la liste: \", this.tickets$.value);\n      this.tickets$.next(this.ticketList);\n    }\n    archivedTicket(ticket) {\n      ticket.archived = true;\n      this.tickets$.next(this.ticketList);\n    }\n    deletedTicket(ticket) {\n      // this.tickets$.value.filter(tick => tick != ticket);\n      this.tickets$.value.splice(this.tickets$.value.indexOf(ticket), 1);\n      console.log(\"Suppresion dans la liste: \", this.tickets$.value);\n      this.tickets$.next(this.ticketList);\n    }\n    static ɵfac = function TicketService_Factory(t) {\n      return new (t || TicketService)();\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TicketService,\n      factory: TicketService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return TicketService;\n})();","map":{"version":3,"names":["TICKETS_MOCKED","BehaviorSubject","TicketService","ticketList","tickets$","constructor","addTicket","ticket","value","push","console","log","next","archivedTicket","archived","deletedTicket","splice","indexOf","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Ni2\\Documents\\Angular_Front\\src\\services\\ticket\\ticket.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Ticket } from '../../models/ticket';\r\nimport { TICKETS_MOCKED } from '../../mocks/tickets.mock';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TicketService {\r\n  /**\r\n   * Services Documentation:\r\n   * https://angular.io/docs/ts/latest/tutorial/toh-pt4.html\r\n   */\r\n\r\n  private ticketList: Ticket[] = TICKETS_MOCKED;\r\n\r\n  /**\r\n   * Observable which contains the list of the tickets.\r\n   * Naming convention: Add '$' at the end of the variable name to highlight it as an Observable.\r\n   */\r\n  public tickets$: BehaviorSubject<Ticket[]> = new BehaviorSubject(this.ticketList);\r\n\r\n  constructor() {\r\n  }\r\n\r\n  addTicket(ticket: Ticket) {\r\n    // You need here to update the list of ticket and then update our observable (Subject) with the new list\r\n    // More info: https://angular.io/tutorial/toh-pt6#the-searchterms-rxjs-subject\r\n    this.tickets$.value.push(ticket);\r\n    console.log(\"Ajout dans la liste: \", this.tickets$.value);\r\n    this.tickets$.next(this.ticketList)\r\n  }\r\n\r\n  archivedTicket(ticket: Ticket) {\r\n    ticket.archived = true;\r\n    this.tickets$.next(this.ticketList);\r\n  }\r\n\r\n   deletedTicket(ticket: Ticket) {\r\n    // this.tickets$.value.filter(tick => tick != ticket);\r\n    this.tickets$.value.splice(this.tickets$.value.indexOf(ticket), 1);\r\n    console.log(\"Suppresion dans la liste: \", this.tickets$.value);\r\n    this.tickets$.next(this.ticketList)\r\n  } \r\n}\r\n"],"mappings":"AAEA,SAASA,cAAc,QAAQ,0BAA0B;AACzD,SAASC,eAAe,QAAQ,MAAM;;AAKtC,WAAaC,aAAa;EAApB,MAAOA,aAAa;IACxB;;;;IAKQC,UAAU,GAAaH,cAAc;IAE7C;;;;IAIOI,QAAQ,GAA8B,IAAIH,eAAe,CAAC,IAAI,CAACE,UAAU,CAAC;IAEjFE,YAAA,GACA;IAEAC,SAASA,CAACC,MAAc;MACtB;MACA;MACA,IAAI,CAACH,QAAQ,CAACI,KAAK,CAACC,IAAI,CAACF,MAAM,CAAC;MAChCG,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAACP,QAAQ,CAACI,KAAK,CAAC;MACzD,IAAI,CAACJ,QAAQ,CAACQ,IAAI,CAAC,IAAI,CAACT,UAAU,CAAC;IACrC;IAEAU,cAAcA,CAACN,MAAc;MAC3BA,MAAM,CAACO,QAAQ,GAAG,IAAI;MACtB,IAAI,CAACV,QAAQ,CAACQ,IAAI,CAAC,IAAI,CAACT,UAAU,CAAC;IACrC;IAECY,aAAaA,CAACR,MAAc;MAC3B;MACA,IAAI,CAACH,QAAQ,CAACI,KAAK,CAACQ,MAAM,CAAC,IAAI,CAACZ,QAAQ,CAACI,KAAK,CAACS,OAAO,CAACV,MAAM,CAAC,EAAE,CAAC,CAAC;MAClEG,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAE,IAAI,CAACP,QAAQ,CAACI,KAAK,CAAC;MAC9D,IAAI,CAACJ,QAAQ,CAACQ,IAAI,CAAC,IAAI,CAACT,UAAU,CAAC;IACrC;;uBAnCWD,aAAa;IAAA;;aAAbA,aAAa;MAAAgB,OAAA,EAAbhB,aAAa,CAAAiB,IAAA;MAAAC,UAAA,EAFZ;IAAM;;SAEPlB,aAAa;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}